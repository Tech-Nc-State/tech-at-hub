worker_processes auto;

events {
    worker_connections 1024;
    multi_accept on;
}

http {
    access_log /dev/stdout;
    error_log /dev/stdout;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             mime.types;
    default_type        application/octet-stream;

    server {
        listen       80;
        server_name  localhost;

        location ~ /git(/.*) {
            client_max_body_size 0; # Git pushes can be massive, just to make sure nginx doesn't suddenly cut the connection add this.
            auth_request /auth/gitclient;
            include /etc/nginx/fastcgi_params; # Include the default fastcgi configs
            fastcgi_param SCRIPT_FILENAME /usr/lib/git-core/git-http-backend; # Tells fastcgi to pass the request to the git http backend executable
            fastcgi_param GIT_HTTP_EXPORT_ALL "";
            fastcgi_param GIT_PROJECT_ROOT /app/git; # root location of all of your git repositories.
            fastcgi_param REMOTE_USER $remote_user;
            fastcgi_param PATH_INFO $1; # Takes the capture group from our location directive and gives git that.
            fastcgi_pass  unix:/var/run/fcgiwrap.socket; # Pass the request to fastcgi
        }

        location = /auth/gitclient {
            internal;
            proxy_pass http://host.docker.internal:5000;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header X-Original-Remote-Addr $remote_addr;
            proxy_set_header X-Original-Host $host;
        }

        location / {
            proxy_pass         http://host.docker.internal:5000;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection keep-alive;
            proxy_set_header   Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
}
